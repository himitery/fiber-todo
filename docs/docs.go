// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "components": {"schemas":{"request.CreateTodoReq":{"properties":{"content":{"example":"sample content","type":"string"},"title":{"example":"sample title","type":"string"}},"required":["title"],"type":"object"},"request.ReIssueReq":{"properties":{"refreshToken":{"type":"string"}},"required":["refreshToken"],"type":"object"},"request.SignInReq":{"properties":{"email":{"type":"string"},"password":{"type":"string"}},"required":["email","password"],"type":"object"},"request.SignUpReq":{"properties":{"email":{"type":"string"},"password":{"type":"string"},"username":{"minLength":2,"type":"string"}},"required":["email","password","username"],"type":"object"},"request.UpdatePasswordReq":{"properties":{"alreadyPassword":{"type":"string"},"newPassword":{"type":"string"}},"required":["alreadyPassword","newPassword"],"type":"object"},"response.ErrorRes":{"properties":{"message":{"type":"string"}},"type":"object"},"response.TodoRes":{"properties":{"Content":{"type":"string"},"createdAt":{"type":"string"},"id":{"type":"string"},"title":{"type":"string"},"updatedAt":{"type":"string"}},"type":"object"},"response.TokenRes":{"properties":{"accessToken":{"type":"string"},"refreshToken":{"type":"string"}},"type":"object"}},"securitySchemes":{"ApiKeyAuth":{"in":"header","name":"Authorization","type":"apiKey"}}},
    "info": {"description":"{{escape .Description}}","title":"{{.Title}}","version":"{{.Version}}"},
    "externalDocs": {"description":"","url":""},
    "paths": {"/api/auth":{"patch":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.UpdatePasswordReq"}}},"description":"UpdatePasswordReq","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TokenRes"}}},"description":"OK"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Unauthorized"}},"security":[{"ApiKeyAuth":[]}],"summary":"비밀번호 변경","tags":["Auth"]}},"/api/auth/login":{"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.SignInReq"}}},"description":"SignInReq","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TokenRes"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Internal Server Error"}},"summary":"로그인","tags":["Auth"]}},"/api/auth/new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.SignUpReq"}}},"description":"SignUpReq","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TokenRes"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Internal Server Error"}},"summary":"회원가입","tags":["Auth"]}},"/api/auth/renew":{"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.ReIssueReq"}}},"description":"ReIssueReq","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TokenRes"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Internal Server Error"}},"summary":"토큰 재발행","tags":["Auth"]}},"/api/health/":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"type":"string"}},"text/plain":{"schema":{"type":"string"}}},"description":"OK"}},"summary":"Ping","tags":["Health"]}},"/api/todo/list":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/response.TodoRes"},"type":"array"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Internal Server Error"}},"security":[{"ApiKeyAuth":[]}],"summary":"Todo 목록 조회","tags":["Todo"]}},"/api/todo/new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.CreateTodoReq"}}},"description":"CreateTodoReq","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TodoRes"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Internal Server Error"}},"security":[{"ApiKeyAuth":[]}],"summary":"Todo 생성","tags":["Todo"]}},"/api/todo/{id}":{"delete":{"parameters":[{"description":"id","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TodoRes"}}},"description":"OK"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Not Found"}},"security":[{"ApiKeyAuth":[]}],"summary":"Todo 삭제","tags":["Todo"]},"get":{"parameters":[{"description":"id","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TodoRes"}}},"description":"OK"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Not Found"}},"security":[{"ApiKeyAuth":[]}],"summary":"Todo 조회","tags":["Todo"]},"patch":{"parameters":[{"description":"id","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.CreateTodoReq"}}},"description":"UpdateTodoReq","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.TodoRes"}}},"description":"OK"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.ErrorRes"}}},"description":"Not Found"}},"security":[{"ApiKeyAuth":[]}],"summary":"Todo 수정","tags":["Todo"]}}},
    "openapi": "3.1.0"
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
